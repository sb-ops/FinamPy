"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import FinamPy.grpc.side_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.type.decimal_pb2
import google.type.interval_pb2
import google.type.money_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetAccountRequest(google.protobuf.message.Message):
    """Запрос получения информации по конкретному аккаунту"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id"]) -> None: ...

global___GetAccountRequest = GetAccountRequest

@typing.final
class GetAccountResponse(google.protobuf.message.Message):
    """Информация о конкретном аккаунте"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    EQUITY_FIELD_NUMBER: builtins.int
    UNREALIZED_PROFIT_FIELD_NUMBER: builtins.int
    POSITIONS_FIELD_NUMBER: builtins.int
    CASH_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    type: builtins.str
    """Тип аккаунта"""
    status: builtins.str
    """Статус аккаунта"""
    @property
    def equity(self) -> google.type.decimal_pb2.Decimal:
        """Доступные средства плюс стоимость открытых позиций"""

    @property
    def unrealized_profit(self) -> google.type.decimal_pb2.Decimal:
        """Нереализованная прибыль"""

    @property
    def positions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Position]:
        """Позиции. Открытые, плюс теоретические (по неисполненным активным заявкам)"""

    @property
    def cash(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[google.type.money_pb2.Money]:
        """Доступные средства"""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        type: builtins.str = ...,
        status: builtins.str = ...,
        equity: google.type.decimal_pb2.Decimal | None = ...,
        unrealized_profit: google.type.decimal_pb2.Decimal | None = ...,
        positions: collections.abc.Iterable[global___Position] | None = ...,
        cash: collections.abc.Iterable[google.type.money_pb2.Money] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["equity", b"equity", "unrealized_profit", b"unrealized_profit"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "cash", b"cash", "equity", b"equity", "positions", b"positions", "status", b"status", "type", b"type", "unrealized_profit", b"unrealized_profit"]) -> None: ...

global___GetAccountResponse = GetAccountResponse

@typing.final
class TradesRequest(google.protobuf.message.Message):
    """Запрос получения истории по сделкам"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    limit: builtins.int
    """Лимит количества сделок"""
    @property
    def interval(self) -> google.type.interval_pb2.Interval:
        """Начало и окончание запрашиваемого периода, Unix epoch time"""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        limit: builtins.int = ...,
        interval: google.type.interval_pb2.Interval | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["interval", b"interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "interval", b"interval", "limit", b"limit"]) -> None: ...

global___TradesRequest = TradesRequest

@typing.final
class TradesResponse(google.protobuf.message.Message):
    """История по сделкам"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRADES_FIELD_NUMBER: builtins.int
    @property
    def trades(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AccountTrade]:
        """Сделки по аккаунту"""

    def __init__(
        self,
        *,
        trades: collections.abc.Iterable[global___AccountTrade] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["trades", b"trades"]) -> None: ...

global___TradesResponse = TradesResponse

@typing.final
class TransactionsRequest(google.protobuf.message.Message):
    """Запрос получения списка транзакций"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """Идентификатор аккаунта"""
    limit: builtins.int
    """Лимит количества транзакций"""
    @property
    def interval(self) -> google.type.interval_pb2.Interval:
        """Начало и окончание запрашиваемого периода, Unix epoch time"""

    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        limit: builtins.int = ...,
        interval: google.type.interval_pb2.Interval | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["interval", b"interval"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "interval", b"interval", "limit", b"limit"]) -> None: ...

global___TransactionsRequest = TransactionsRequest

@typing.final
class TransactionsResponse(google.protobuf.message.Message):
    """Список транзакций"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRANSACTIONS_FIELD_NUMBER: builtins.int
    @property
    def transactions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Transaction]:
        """Транзакции по аккаунту"""

    def __init__(
        self,
        *,
        transactions: collections.abc.Iterable[global___Transaction] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["transactions", b"transactions"]) -> None: ...

global___TransactionsResponse = TransactionsResponse

@typing.final
class Position(google.protobuf.message.Message):
    """Информация о позиции"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SYMBOL_FIELD_NUMBER: builtins.int
    QUANTITY_FIELD_NUMBER: builtins.int
    AVERAGE_PRICE_FIELD_NUMBER: builtins.int
    CURRENT_PRICE_FIELD_NUMBER: builtins.int
    symbol: builtins.str
    """Символ инструмента"""
    @property
    def quantity(self) -> google.type.decimal_pb2.Decimal:
        """Количество в шт., значение со знаком определяющее (long-short)"""

    @property
    def average_price(self) -> google.type.decimal_pb2.Decimal:
        """Средняя цена"""

    @property
    def current_price(self) -> google.type.decimal_pb2.Decimal:
        """Текущая цена"""

    def __init__(
        self,
        *,
        symbol: builtins.str = ...,
        quantity: google.type.decimal_pb2.Decimal | None = ...,
        average_price: google.type.decimal_pb2.Decimal | None = ...,
        current_price: google.type.decimal_pb2.Decimal | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["average_price", b"average_price", "current_price", b"current_price", "quantity", b"quantity"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["average_price", b"average_price", "current_price", b"current_price", "quantity", b"quantity", "symbol", b"symbol"]) -> None: ...

global___Position = Position

@typing.final
class AccountTrade(google.protobuf.message.Message):
    """Информация о сделке"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TRADE_ID_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    PRICE_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    SIDE_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    trade_id: builtins.str
    """Идентификатор сделки"""
    symbol: builtins.str
    """Символ инструмента"""
    side: FinamPy.grpc.side_pb2.Side.ValueType
    """Сторона сделки (long или short)"""
    @property
    def price(self) -> google.type.decimal_pb2.Decimal:
        """Цена исполнения"""

    @property
    def size(self) -> google.type.decimal_pb2.Decimal:
        """Размер в шт."""

    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Метка времени"""

    def __init__(
        self,
        *,
        trade_id: builtins.str = ...,
        symbol: builtins.str = ...,
        price: google.type.decimal_pb2.Decimal | None = ...,
        size: google.type.decimal_pb2.Decimal | None = ...,
        side: FinamPy.grpc.side_pb2.Side.ValueType = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["price", b"price", "size", b"size", "timestamp", b"timestamp"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["price", b"price", "side", b"side", "size", b"size", "symbol", b"symbol", "timestamp", b"timestamp", "trade_id", b"trade_id"]) -> None: ...

global___AccountTrade = AccountTrade

@typing.final
class Transaction(google.protobuf.message.Message):
    """Информация о транзакции"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Trade(google.protobuf.message.Message):
        """Объект заполняется для торговых типов транзакций"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SIZE_FIELD_NUMBER: builtins.int
        PRICE_FIELD_NUMBER: builtins.int
        ACCRUED_INTEREST_FIELD_NUMBER: builtins.int
        @property
        def size(self) -> google.type.decimal_pb2.Decimal:
            """Количество в шт."""

        @property
        def price(self) -> google.type.decimal_pb2.Decimal:
            """Цена сделки за штуку. Цена исполнения/Размер премии по опциону. Это цена заключения, значение берется из сделки."""

        @property
        def accrued_interest(self) -> google.type.decimal_pb2.Decimal:
            """НКД. Заполнено если в сделке есть НКД"""

        def __init__(
            self,
            *,
            size: google.type.decimal_pb2.Decimal | None = ...,
            price: google.type.decimal_pb2.Decimal | None = ...,
            accrued_interest: google.type.decimal_pb2.Decimal | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["accrued_interest", b"accrued_interest", "price", b"price", "size", b"size"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["accrued_interest", b"accrued_interest", "price", b"price", "size", b"size"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    TIMESTAMP_FIELD_NUMBER: builtins.int
    SYMBOL_FIELD_NUMBER: builtins.int
    CHANGE_FIELD_NUMBER: builtins.int
    TRADE_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Идентификатор транзакции"""
    category: builtins.str
    """Тип транзакции из TransactionCategory"""
    symbol: builtins.str
    """Символ инструмента"""
    @property
    def timestamp(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """Метка времени"""

    @property
    def change(self) -> google.type.money_pb2.Money:
        """Изменение в деньгах"""

    @property
    def trade(self) -> global___Transaction.Trade:
        """Информация о сделке"""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        category: builtins.str = ...,
        timestamp: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        symbol: builtins.str = ...,
        change: google.type.money_pb2.Money | None = ...,
        trade: global___Transaction.Trade | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["change", b"change", "timestamp", b"timestamp", "trade", b"trade"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["category", b"category", "change", b"change", "id", b"id", "symbol", b"symbol", "timestamp", b"timestamp", "trade", b"trade"]) -> None: ...

global___Transaction = Transaction
