# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from FinamPy.proto_old import orders_pb2 as FinamPy_dot_proto__old_dot_orders__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in FinamPy/grpc_old/orders_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class OrdersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NewOrder = channel.unary_unary(
                '/grpc.tradeapi.v1.Orders/NewOrder',
                request_serializer=FinamPy_dot_proto__old_dot_orders__pb2.NewOrderRequest.SerializeToString,
                response_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.NewOrderResult.FromString,
                _registered_method=True)
        self.CancelOrder = channel.unary_unary(
                '/grpc.tradeapi.v1.Orders/CancelOrder',
                request_serializer=FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderRequest.SerializeToString,
                response_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderResult.FromString,
                _registered_method=True)
        self.GetOrders = channel.unary_unary(
                '/grpc.tradeapi.v1.Orders/GetOrders',
                request_serializer=FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersRequest.SerializeToString,
                response_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersResult.FromString,
                _registered_method=True)


class OrdersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NewOrder(self, request, context):
        """Creates new order.
        Order placement in OrderBook takes some time due to processing speed,
        that is why this method returns transaction_id, which can be used
        to find corresponding order in GetOrdersRequest or in OrderEvent message
        of Events service (EventResponse.event.order).
        Создать новую заявку.
        На обработку нового поручения по размещению заявки в биржевой стакан
        требуется некоторое время, поэтому этот метод возвращает структуру с
        transaction_id, которая может быть использована для поиска соответствующей
        заявки через GetOrdersRequest или в сообщении OrderEvent от сервиса событий
        (EventResponse.event.order).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrder(self, request, context):
        """Cancels order.
        Отменяет заявку.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrders(self, request, context):
        """Returns the list of orders.
        Возвращает список заявок.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrdersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NewOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.NewOrder,
                    request_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.NewOrderRequest.FromString,
                    response_serializer=FinamPy_dot_proto__old_dot_orders__pb2.NewOrderResult.SerializeToString,
            ),
            'CancelOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrder,
                    request_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderRequest.FromString,
                    response_serializer=FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderResult.SerializeToString,
            ),
            'GetOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrders,
                    request_deserializer=FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersRequest.FromString,
                    response_serializer=FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.tradeapi.v1.Orders', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpc.tradeapi.v1.Orders', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Orders(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NewOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.tradeapi.v1.Orders/NewOrder',
            FinamPy_dot_proto__old_dot_orders__pb2.NewOrderRequest.SerializeToString,
            FinamPy_dot_proto__old_dot_orders__pb2.NewOrderResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.tradeapi.v1.Orders/CancelOrder',
            FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderRequest.SerializeToString,
            FinamPy_dot_proto__old_dot_orders__pb2.CancelOrderResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpc.tradeapi.v1.Orders/GetOrders',
            FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersRequest.SerializeToString,
            FinamPy_dot_proto__old_dot_orders__pb2.GetOrdersResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
